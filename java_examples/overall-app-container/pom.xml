<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.pet.king</groupId>
    <artifactId>overall-app-container</artifactId>
    <version>0.0.1-SNAPSHOT</version>

    <packaging>pom</packaging>

    <modules>
        <module>overall-util</module>
        <module>overall-app</module>
        <module>overall-webapp</module>
        <module>overall-common</module>
    </modules>

    <build>
        <!-- pluginManagement. This is like dependencyManagement, we specify plugin configurations here. Only here.
             Then the module that wants to use a like have to only reference it. Like this:
             (though any module can override the configurations specified here)

             <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                </plugin>
            </plugins>
         -->
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.5.1</version>
                    <configuration>
                        <compilerArgument>-parameters</compilerArgument>
                        <source>1.8</source>
                        <target>1.8</target>
                        <!-- <annotationProcessors> -->
                        <!-- <proc>com.javacodegeeks.advanced.processor.MutatingAnnotationProcessor</proc> -->
                        <!-- </annotationProcessors> -->
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>

            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>2.2</version>
            </plugin>

        </plugins>
    </build>

    <!-- the dependencies that the modules can use. Versions are managed here. The module if requires a dependency it only needs
        to specify the groupId and artifactId. So this acts as sort of a dependency pool. From this pool the modules can declare what they want. -->
    <dependencyManagement>
        <dependencies>

            <!-- required for overal-webapp's build, Tomcat provides the necessary
                part of it -->
            <dependency>
                <groupId>javax</groupId>
                <artifactId>javaee-api</artifactId>
                <version>7.0</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>3.1.0</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>javax.servlet.jsp</groupId>
                <artifactId>jsp-api</artifactId>
                <version>2.2</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>javax.el</groupId>
                <artifactId>el-api</artifactId>
                <version>2.2</version>
                <scope>provided</scope>
            </dependency>
            <!-- This one is not included by Tomcat, needs to get deployed. This lets
                us use the c:core and other JSTLs and custom tag handlers. -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>jstl</artifactId>
                <version>1.2</version>
            </dependency>

            <!-- Bean validation API for overall-webapp (jersey provides the implementation) -->
            <dependency>
                <groupId>javax.validation</groupId>
                <artifactId>validation-api</artifactId>
                <version>1.1.0.Final</version>
            </dependency>

            <!-- <dependency> -->
            <!-- <groupId>org.apache.tomcat</groupId> -->
            <!-- <artifactId>tomcat-catalina</artifactId> -->
            <!-- <version>8.0.32</version> -->
            <!-- <scope>provided</scope> -->
            <!-- </dependency> -->

            <!-- JAXB -->
            <dependency>
                <groupId>javax.xml.bind</groupId>
                <artifactId>jaxb-api</artifactId>
                <version>2.2.6</version>
            </dependency>
            <dependency>
                <groupId>javax.xml</groupId>
                <artifactId>jaxb-impl</artifactId>
                <version>2.1</version>
            </dependency>

            <!-- Jersey Servlet 3.X implementation -->
            <dependency>
                <groupId>org.glassfish.jersey.containers</groupId>
                <artifactId>jersey-container-servlet</artifactId>
                <version>2.23</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.core</groupId>
                <artifactId>jersey-client</artifactId>
                <version>2.23</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.ext</groupId>
                <artifactId>jersey-bean-validation</artifactId>
                <version>2.23</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.media</groupId>
                <artifactId>jersey-media-json-jackson</artifactId>
                <version>2.23</version>
            </dependency>

            <!-- CDI for overall-webapp -->
            <dependency>
                <groupId>javax.enterprise</groupId>
                <artifactId>cdi-api</artifactId>
                <version>1.2</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <!-- JBoss/Weld Refrence Implementation for CDI on a Servlet Container -->
                <groupId>org.jboss.weld.servlet</groupId>
                <artifactId>weld-servlet</artifactId>
                <version>2.3.4.Final</version>
                <scope>runtime</scope>
            </dependency>

            <!-- JAX-WS -->
            <dependency>
                <groupId>com.sun.xml.ws</groupId>
                <artifactId>jaxws-rt</artifactId>
                <version>2.2.10</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.4</version>
                <!-- default scope is compile -->
                <!-- <scope>compile</scope> -->
            </dependency>

            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>3.8.1</version>
                <scope>test</scope>
            </dependency>

            <!-- Maven modules from this parent Maven project - modules can depend
                on each other -->
            <dependency>
                <groupId>com.pet.king</groupId>
                <artifactId>overall-util</artifactId>
                <version>0.0.1-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>com.pet.king</groupId>
                <artifactId>overall-common</artifactId>
                <version>0.0.1-SNAPSHOT</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

</project>