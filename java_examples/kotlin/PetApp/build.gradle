buildscript {
	ext {
		appVersion = '1.0.0-SNAPSHOT'
		gradlewVersion = '5.3.1'
	}
}

plugins {
	id 'org.springframework.boot' version '2.1.4.RELEASE'
	id 'org.jetbrains.kotlin.jvm' version '1.3.21'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.3.21'
	id "org.jetbrains.kotlin.kapt" version "1.3.21"
}

// subprojects {
allprojects {
	apply plugin: 'kotlin'
	apply plugin: 'kotlin-spring'
	apply plugin: 'kotlin-kapt'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	group 'hu.pet'
	version = appVersion

	// it is necessary to disable the bootJar task. It works only with Spring Boot projects!
	// however with library ones, it does not.
	// so assuming there will be more library projects than actual Spring Boot projects, disable here the bootJar,
	// reenable the jar task and in each Spring Boot app do the opposite: disable jar and enable bootJar
	bootJar.enabled = false
	jar.enabled = true

	repositories {
		mavenCentral()
	}

	dependencies {
		implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
		implementation("org.jetbrains.kotlin:kotlin-reflect")

		implementation('org.springframework.boot:spring-boot-starter')

		testImplementation('org.springframework.boot:spring-boot-starter-test') {
			exclude module: 'junit'
		}
		testImplementation('org.junit.jupiter:junit-jupiter-api')
		testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine')
	}

	sourceCompatibility = 1.8
	compileKotlin {
		kotlinOptions {
			freeCompilerArgs = ["-Xjsr305=strict"]
			jvmTarget = "1.8"
		}
	}
	compileTestKotlin {
		kotlinOptions {
			freeCompilerArgs = ["-Xjsr305=strict"]
			jvmTarget = "1.8"
		}
	}

	test {
		useJUnitPlatform()
	}
}

dependencies {
	implementation project(":EVModule")
	implementation project(":SADModule")
	implementation project(":VNextSpringModule")
}

wrapper {
	gradleVersion = gradlewVersion
	distributionType = Wrapper.DistributionType.ALL
}